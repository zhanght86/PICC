<?xml version="1.0" encoding="UTF-8"?>
<project default="test" basedir="." name="sinosoft">
<!--属性定义-->
<property name="debuglevel" value="source,lines,vars"/>
<import file="condition.xml"/>
<import file="property.xml" />

<!--编译路径定义结束-->
<taskdef name="fileCombin" classname="hayden.FileCombin"/>
<taskdef name="inClassFind" classname="hayden.InnerClassFind"/>
<taskdef name="utility" classname="hayden.UtilitySum"/>
<taskdef name="out" classname="hayden.OutPutInfo" />
<taskdef resource="net/sf/antcontrib/antlib.xml"/>
<taskdef name="sort" classname="hayden.SortContain" />
<taskdef name="reduceHis" classname="hayden.ReduceHis" />
<taskdef name="jarGet" classname="hayden.SvnStatusLogParse"/>
<!--引用第三方jar包-->
<path id="svnant.classpath">
	<pathelement location="E:\apache-ant-1.8.2\lib\svnant.jar"/>
	<pathelement location="E:\apache-ant-1.8.2\lib\svnClientAdapter.jar"/>
	<pathelement location="E:\apache-ant-1.8.2\lib\svnjavahl.jar"/>
	<pathelement location="E:\apache-ant-1.8.2\lib\ganymed.jar"/>
<!--	    <fileset dir="E:\apache-ant-1.8.2\lib">
      <include name="**/*.jar"/>
    </fileset>-->
</path> 

<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath"/>
<svnSetting id="svnparams" username="admin" password="admin" javahl="false" svnkit="false"/>  

<!--拷贝class文件到web-inf下-->
<target name="bincopy" depends="listrep">
<copy todir="${jenkins.dir}\mis\src\main\webapp\WEB-INF\classes">
    <fileset dir="${jenkins.dir}\mis\target\classes"/>
  </copy>
</target>

<!--打包处理-->
<target name="jar" depends="bincopy">
<!--检测内部类-->
<inClassFind listFile="${temp.dir}\${packlist.name}" srcDir="${jenkins.dir}\mis\src\main\webapp"/>

<!--文件根据文件清单打包-->
	<exec dir="${jenkins.dir}\mis\src\main\webapp" executable="cmd">
		<arg value="/c"/>
	  <arg line="jar -cf wap.zip @${temp.dir}\${packlist.name}"/>
	</exec>
	<unzip src="${jenkins.dir}\mis\src\main\webapp\wap.zip" dest="${temp.dir}\file"/>
	<delete quiet="true">
		<fileset dir="${jenkins.dir}\mis\src\main\webapp" includes="*.zip"/>
	</delete>
<!--升级文件备份地址-->
<!--	<fileCombin addString="${remote.dir}" destFile="${packlist.name}" finalfile="${backlist}"/>-->
	<tstamp >
	  <format property="Month" pattern="yyyyMM"  locale="cn,CN"/>
	  <format property="TODAY_UK" pattern="HHMM"  locale="cn,CN"/>
	</tstamp>
	<jar basedir="${temp.dir}\file\" jarfile="update-${DSTAMP}_${TSTAMP}.zip"/>
  	<mkdir dir="${update.dir}\${Month}" />
	<mkdir dir="${update.dir}\${Month}\${DSTAMP}_${TSTAMP}" />
	<unzip src="update-${DSTAMP}_${TSTAMP}.zip" dest="${update.dir}\${Month}\${DSTAMP}_${TSTAMP}"/>
	<echo message="升级文件已拷贝到备份目录"/>
	<delete includeEmptyDirs="true" quiet="true">
		<fileset dir="${update.dir}/${Month}/${DSTAMP}_${TSTAMP}/META-INF"/>
	</delete>
	<delete >
		<fileset dir="${antfile.dir}">
			<include name="*.zip"/>
		</fileset>
	</delete>  
</target>
<!--上传jar包测试服务器-->

<target name="upload-cus"  depends="init" if="customer.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes">
    	<fileset dir="${customer.lib}">
      <include name="customer-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-palt" depends="upload-cus" if="paltformForMangerM.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes">
    	<fileset dir="${paltformForMangerM.lib}">
      <include name="paltformForMangerM-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-rms" depends="upload-palt" if="rms.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes">
    	<fileset dir="${rms.lib}">
      <include name="rms-0.1.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-support" depends="upload-rms" if="support.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes">
    	<fileset dir="${support.lib}">
      <include name="support-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-util" depends="upload-support" if="util.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes">
    	<fileset dir="${util.lib}">
      <include name="util-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-ympromote" depends="upload-util" if="ympromote.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${ympromote.lib}">
      <include name="ympromote-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-insureBox" depends="upload-ympromote" if="insureBox.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${insureBox.lib}">
      <include name="insureBox-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-newCustomer" depends="upload-insureBox" if="newCustomer.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${newCustomer.lib}">
      <include name="newCustomer-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-noCarProductConfigure" depends="upload-newCustomer" if="noCarProductConfigure.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${noCarProductConfigure.lib}">
      <include name="noCarProductConfigure-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-cpiBusiness" depends="upload-noCarProductConfigure" if="cpiBusiness.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${cpiBusiness.lib}">
      <include name="cpiBusiness-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-buyCar" depends="upload-cpiBusiness" if="buyCar.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${buyCar.lib}">
      <include name="buyCar-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<target name="upload-interfaceAndTimingTask" depends="upload-buyCar" if="interfaceAndTimingTask.true">
  <scp todir="${host.userid}:${host.password}@${host.ip}:${remote.dir}" trust="yes" >
    	<fileset dir="${interfaceAndTimingTask.lib}">
      <include name="interfaceAndTimingTask-0.0.1-SNAPSHOT.jar"/>
      </fileset>
  </scp>
</target>
<!--重启命令,如果存在java文件或xml时-->
<target name="shdeploy" depends="upload-interfaceAndTimingTask" >
	<echo message="登录服务器"/>
	<sshexec host="${host.ip}"
	username="${host.userid}"
	password="${host.password}"
	trust="true"
	command="echo 123 "/>
	<echo message="请手动重启服务"/>
	</target>

<!--最后进行临时文件的删除-->
<target name="end" depends="shdeploy">
	<echo message="更新完毕"/>
</target>




</project>